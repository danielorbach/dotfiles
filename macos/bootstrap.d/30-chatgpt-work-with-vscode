#!/bin/zsh

# This script installs or updates the ChatGPT "Work with Apps" VS Code extension.
# It checks for VS Code, ensures the extension is up-to-date, and downloads the
# latest version if needed.
#
# What is "Work with Apps":
# - "Work with Apps" is an OpenAI extension for Visual Studio Code that
#   integrates ChatGPT into the IDE, enabling interactions with apps and
#   assisting development workflows.
# - Currently, this extension is in beta and is not available on the Visual
#   Studio Code marketplace. Instead, it must be installed manually from a
#   `.vsix` file provided by OpenAI.
# - For more information, visit OpenAI's guide:
#   https://help.openai.com/en/articles/10119604-work-with-apps-on-macos
#
# Why install manually:
# - Since the extension is in beta, OpenAI provides a direct `.vsix` download
#   link instead of publishing it on the marketplace. For details on how to
#   manually install the extension, refer to OpenAI's installation guide:
#   https://help.openai.com/en/articles/10128592-how-to-install-the-work-with-
#   apps-visual-studio-code-extension.
# - This script handles downloading, installing, and updating the extension to
#   ensure you always have the latest version.
#
# Dependencies:
# - Visual Studio Code with CLI support (`code` command).
# - jq: Used for JSON parsing.
# - curl: Used to download the `.vsix` file.
# - unzip: Used to extract metadata from the `.vsix` file.

setopt errexit nounset pipefail  # Enable strict mode for better error handling


# === HELPERS ===

# Print message in green.
info() {
  printf "\033[1;32m%-7s\033[0m %s\n" "[INFO]" "$*"
}

# Print message in yellow.
warn() {
  printf "\033[1;33m%-7s\033[0m %s\n" "[WARN]" "$*"
}

# Print message in red, and exit with non-zero code.
error() {
  printf "\033[1;31m%-7s\033[0m %s\n" "[ERROR]" "$*" >&2
  exit 1
}


# === CHECKS ===

# Check if VS Code is installed
if ! command -v code &> /dev/null; then
  error "VS Code is not installed. Please install it first."
fi


# === MAIN ===

# Check if the ChatGPT extension is already installed
EXTENSION_ID="openai-chatgpt"
EXTENSION_URL="https://download.persistent.oaistatic.com/openai-chatgpt.vsix"

INSTALLED_VERSION=$(code --list-extensions --show-versions --json | jq -r ".[] | select(.name == \"$EXTENSION_ID\") | .version")

# Create a temporary directory
TEMP_DIR=$(mktemp -d)

# Download the ChatGPT VS Code extension into the temporary directory
info "Downloading ChatGPT VS Code extension..."
curl -o "$TEMP_DIR/$EXTENSION_ID.vsix" "$EXTENSION_URL"

# Extract the version from the downloaded file
DOWNLOADED_VERSION=$(unzip -p "$TEMP_DIR/$EXTENSION_ID.vsix" "extension/package.json" | jq -r '.version')

if [[ -n "$INSTALLED_VERSION" && -n "$DOWNLOADED_VERSION" ]]; then
  if [[ "$INSTALLED_VERSION" == "$DOWNLOADED_VERSION" ]]; then
    info "The ChatGPT extension is already up-to-date (version $INSTALLED_VERSION). Skipping installation."
    rm -rf "$TEMP_DIR"
    exit 0
  else
    warn "Updating ChatGPT extension from version $INSTALLED_VERSION to $DOWNLOADED_VERSION."
  fi
else
  info "Installing ChatGPT extension version $DOWNLOADED_VERSION."
fi

# Install the extension using the VS Code command-line tool
info "Installing ChatGPT VS Code extension..."
code --install-extension "$TEMP_DIR/$EXTENSION_ID.vsix"

# Remove the temporary directory and its contents
rm -rf "$TEMP_DIR"
info "Installation completed."
